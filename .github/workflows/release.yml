name: goreleaser

on:
  release:
    types: [published]
  pull_request:
    branches:
      - "master"

jobs:
  goreleaser:
    name: "goreleaser${{ startsWith(github.event_name, 'pull_request') && ' snapshot mode' || '' }}"
    if: ${{ (github.event.pull_request.head.repo.full_name == github.repository) || (github.event_name == 'release') }}
    runs-on: ubuntu-latest
    environment: prod
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: "go.mod"

      - name: Get Vault secrets
        id: secrets
        uses: hashicorp/vault-action@7709c609789c5e27b757a85817483caadbb5939a # v3.3.0
        with:
          method: jwt
          url: ${{ vars.VAULT_ADDR }}
          path: ${{ vars.VAULT_AUTH_PATH }}
          role: ${{ vars.VAULT_ROLE }}
          secrets: |
            ES/data/terraform-provider/prod * ;

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@e89d40939c28e39f97cf32126055eeae86ba74ec # v6.3.0
        with:
          gpg_private_key: ${{ steps.secrets.outputs.GPG_PRIVATE_KEY }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@9c156ee8a17a598857849441385a2041ef570552 # v6.3.0
        with:
          distribution: goreleaser
          args: release --clean ${{ startsWith(github.event_name, 'pull_request') && '--snapshot' || '' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
