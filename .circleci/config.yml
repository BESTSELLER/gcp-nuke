version: 2.1

orbs:
  secret-injector: bestsellerit/secret-injector@0.2.34

commands:
  goreleaser:
    parameters:
      release-type:
        type: string
    steps:
      - run:
          name: Import private key
          command: |
            source /tmp/secrets.env
            apk add gnupg
            echo -e "$GPG_PRIVATE_KEY" | base64 -d > $HOME/private.key
            gpg --pinentry-mode loopback --batch --yes --import $HOME/private.key
      - run:
          name: Run GoReleaser
          command: |
            source /tmp/secrets.env
            if [ "<< parameters.release-type >>" = "test" ] ; then
              goreleaser release --snapshot --rm-dist
            else
              goreleaser release --rm-dist
            fi
jobs:
  build:
    parameters:
      release-type:
        type: enum
        enum: ["test", "release"]
        default: "test"
    docker:
      - image: goreleaser/goreleaser #circleci/golang:1.15
    steps:
      - checkout
      - attach_workspace:
          at: /tmp
      - goreleaser:
          release-type: << parameters.release-type >>

tag_filter: &tag_filter /v[0-9]+.[0-9]+.[0-9]+/
my_context: &my_context es02-prod

test_filter: &test_filter
  filters:
    tags:
      ignore: *tag_filter
release_filter: &release_filter
  filters:
    branches:
      ignore: /.*/
    tags:
      only: *tag_filter

workflows:
  version: 2
  tester:
    jobs:
      - secret-injector/dump-secrets:
          <<: *dump_secrets
          context: *my_context
          <<: *test_filter
      - build:
          release-type: test
          name: test
          requires:
            - secret-injector/dump-secrets
          <<: *test_filter
  build-n-release:
    jobs:
      - secret-injector/dump-secrets:
          <<: *dump_secrets
          context: *my_context
          <<: *release_filter
      - build:
          name: build
          release-type: release
          requires:
            - secret-injector/dump-secrets
          <<: *release_filter